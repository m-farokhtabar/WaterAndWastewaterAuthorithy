<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Color x:Key="ColorBackgroundGridButton">#FF353787</Color>
    <SolidColorBrush x:Key="BrushBackgroundGridButton" Color="{StaticResource ResourceKey=ColorBackgroundGridButton}"/>

    <Style x:Key="BorderGridButton" TargetType="{x:Type Border}">
        <Style.Triggers>
            <EventTrigger RoutedEvent="UIElement.MouseEnter">
                <BeginStoryboard>
                    <Storyboard Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)">
                        <ColorAnimation  From="{StaticResource ResourceKey=ColorBackgroundGridButton}" To="{StaticResource ResourceKey=ColorBackgroundHighLightButtonFooter}"  Duration="0:0:0.2"></ColorAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="UIElement.MouseLeave">
                <BeginStoryboard>
                    <Storyboard Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)">
                        <ColorAnimation  From="{StaticResource ResourceKey=ColorBackgroundHighLightButtonFooter}" To="{StaticResource ResourceKey=ColorBackgroundGridButton}" Duration="0:0:0.2"></ColorAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="BorderBrush" Value="White"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#FFCCCCCC"/>
    </Style>

    <Style x:Key="GridButtons" TargetType="{x:Type Button}" BasedOn="{StaticResource ResourceKey=BaseStyle}">
        <Setter Property="HorizontalAlignment"  Value="Right"/>
        <Setter Property="VerticalAlignment"    Value="Center"/>
        <Setter Property="ToolTipService.IsEnabled" Value="False"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="BorderButton" Background="{StaticResource ResourceKey=BrushBackgroundGridButton}" Style="{StaticResource ResourceKey=BorderGridButton}">
                        <Image     Grid.Column="0" Grid.Row="0" Source="{DynamicResource ResourceKey=ImageButton}" Width="16" Height="16"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="BorderButton" Property="Background" Value="#FFff6800"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BorderButtonStyle" TargetType="{x:Type Border}">
        <Style.Triggers>
            <EventTrigger RoutedEvent="UIElement.MouseEnter">
                <BeginStoryboard>
                    <Storyboard Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)">
                        <ColorAnimation  From="{StaticResource ResourceKey=ColorBackgroundGridButton}" To="{StaticResource ResourceKey=ColorBackgroundHighLightButtonFooter}"  Duration="0:0:0.2"></ColorAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="UIElement.MouseLeave">
                <BeginStoryboard>
                    <Storyboard Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)">
                        <ColorAnimation  From="{StaticResource ResourceKey=ColorBackgroundHighLightButtonFooter}" To="{StaticResource ResourceKey=ColorBackgroundGridButton}" Duration="0:0:0.2"></ColorAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="BorderBrush" Value="White"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="White"/>
    </Style>
    <Style x:Key="ButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ResourceKey=BaseStyle}">
        <Setter Property="HorizontalAlignment"  Value="Right"/>
        <Setter Property="VerticalAlignment"    Value="Center"/>
        <Setter Property="ToolTipService.IsEnabled" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{StaticResource ResourceKey=BrushBackgroundGridButton}" Style="{StaticResource ResourceKey=BorderButtonStyle}">
                        <Grid Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="34"></RowDefinition>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="32"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Image     Grid.Column="0" Grid.Row="0" Source="{DynamicResource ResourceKey=ImageButton}" Width="24" Height="24"/>
                            <TextBlock Grid.Column="1" Grid.Row="0" Style="{StaticResource ResourceKey=TextOfMainMenuButton}" VerticalAlignment="Center" Text="{TemplateBinding Property=Content}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="DefaultBorderButton" TargetType="{x:Type Border}">
        <Style.Triggers>
            <EventTrigger RoutedEvent="UIElement.MouseEnter">
                <BeginStoryboard>
                    <Storyboard Storyboard.TargetProperty="(Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                        <ColorAnimation  From="#FFBDBDBD" To="{StaticResource ResourceKey=ColorBackgroundHighLightButtonFooter}"  Duration="0:0:0.2"></ColorAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="UIElement.MouseLeave">
                <BeginStoryboard>
                    <Storyboard Storyboard.TargetProperty="(Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                        <ColorAnimation  From="{StaticResource ResourceKey=ColorBackgroundHighLightButtonFooter}" To="#FFBDBDBD" Duration="0:0:0.2"></ColorAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="BorderBrush" Value="White"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="White"/>
    </Style>

    <Style x:Key="DefaultButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ResourceKey=BaseStyle}">
        <Setter Property="HorizontalAlignment"  Value="Right"/>
        <Setter Property="VerticalAlignment"    Value="Center"/>
        <Setter Property="ToolTipService.IsEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Style="{StaticResource ResourceKey=DefaultBorderButton}" CornerRadius="5">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                <GradientStop Color="#FFBDBDBD" Offset="1"/>
                                <GradientStop Color="White" Offset="0.164"/>
                            </LinearGradientBrush>
                        </Border.Background>

                        <Grid Margin="0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="34"></RowDefinition>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="32"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Image     Grid.Column="0" Grid.Row="0" Source="{DynamicResource ResourceKey=ImageButton}" Width="24" Height="24"/>
                            <TextBlock Grid.Column="1" Grid.Row="0" Style="{StaticResource ResourceKey=TextOfMainMenuButton}" VerticalAlignment="Center" Text="{TemplateBinding Property=Content}" Foreground="Black"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




</ResourceDictionary>